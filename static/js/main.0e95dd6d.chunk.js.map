{"version":3,"sources":["../../../../server/personal_website/src/pages/Footer.js","../../../../server/personal_website/src/App.js","../../../../server/personal_website/src/serviceWorker.js","../../../../server/personal_website/src/index.js"],"names":["buttonStyle","padding","linkStyle","color","Footer","react_default","a","createElement","class","style","marginTop","textAlign","href","aria-hidden","Component","App","pages_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wOAMMA,mBAAc,CAChBC,QAAS,OAEPC,EAAY,CACdC,MAAO,WA8BIC,mLAxBP,OACIC,EAAAC,EAAAC,cAAA,OAAMC,MAAM,MAAMC,MAAO,CAAEC,UAAW,KAAMC,UAAW,WACnDN,EAAAC,EAAAC,cAAA,OAAKC,MAAM,UACPH,EAAAC,EAAAC,cAAA,KAAGK,KAAK,2CAA2CH,MAAOP,GACtDG,EAAAC,EAAAC,cAAA,KAAGC,MAAM,8BAA8BC,MAAOT,EAAaa,cAAY,UAE3ER,EAAAC,EAAAC,cAAA,KAAGK,KAAK,uDAAuDH,MAAOP,GAClEG,EAAAC,EAAAC,cAAA,KAAGC,MAAM,8BAA8BC,MAAOT,EAAaa,cAAY,UAE3ER,EAAAC,EAAAC,cAAA,KAAGK,KAAK,2CAA2CH,MAAOP,GACtDG,EAAAC,EAAAC,cAAA,KAAGC,MAAM,wBAAwBC,MAAOT,EAAaa,cAAY,UAErER,EAAAC,EAAAC,cAAA,KAAGK,KAAK,kCAAkCH,MAAOP,GAC7CG,EAAAC,EAAAC,cAAA,KAAGC,MAAM,qBAAqBC,MAAOT,EAAaa,cAAY,UAElER,EAAAC,EAAAC,cAAA,KAAGK,KAAK,gDAAgDH,MAAOP,GAC3DG,EAAAC,EAAAC,cAAA,KAAGC,MAAM,oBAAoBC,MAAOT,EAAaa,cAAY,mBAlBhEC,aC2ENC,mLAtEP,OACIV,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aAGPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,OACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,SAASC,MAAO,CAAEC,UAAW,SACpCL,EAAAC,EAAAC,cAAA,+BAKRF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,OAAX,wRAQAH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,MAAMC,MAAO,CAAEC,UAAW,OACjCL,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iBACPH,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEE,UAAW,SACnBN,EAAAC,EAAAC,cAAA,0BAGRF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBACPH,EAAAC,EAAAC,cAAA,oBAORF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,MAAMC,MAAO,CAAEC,UAAW,OACjCL,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iBACPH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,4BAGRF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBACPH,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEE,UAAW,SAAvB,WAORN,EAAAC,EAAAC,cAAA,OAAKC,MAAM,MAAMC,MAAO,CAAEC,UAAW,OACjCL,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iBACPH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,0BAGRF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBACPH,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEE,UAAW,SAAvB,WAORN,EAAAC,EAAAC,cAAA,OAAKC,MAAM,MAAMC,MAAO,CAAEC,UAAW,KAAMC,UAAW,WAClDN,EAAAC,EAAAC,cAACS,EAAD,eAhEFF,aCLEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlB,EAAAC,EAAAC,cAACiB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0e95dd6d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport '../css/skeleton.css';\nimport '../css/normalize.css';\nimport { link } from 'fs';\n\nconst buttonStyle = {\n    padding: \"1%\",\n};\nconst linkStyle = {\n    color: \"#0060B6\",\n\n};\n\nclass Footer extends Component {\n    render() {\n        return (\n            < div class=\"row\" style={{ marginTop: \"3%\", textAlign: \"center\" }} >\n                <div class=\"column\">\n                    <a href=\"https://www.facebook.com/alay.deliwala.9\" style={linkStyle}>\n                        <i class=\"fa fa-facebook-square fa-2x\" style={buttonStyle} aria-hidden=\"true\"></i>\n                    </a>\n                    <a href=\"https://www.linkedin.com/in/alay-deliwala-21876b129/\" style={linkStyle}>\n                        <i class=\"fa fa-linkedin-square fa-2x\" style={buttonStyle} aria-hidden=\"true\"></i>\n                    </a>\n                    <a href=\"https://www.instagram.com/alay_deliwala/\" style={linkStyle}>\n                        <i class=\"fa fa-instagram fa-2x\" style={buttonStyle} aria-hidden=\"true\"></i>\n                    </a>\n                    <a href=\"https://github.com/alaydeliwala\" style={linkStyle}>\n                        <i class=\"fa fa-github fa-2x\" style={buttonStyle} aria-hidden=\"true\"></i>\n                    </a>\n                    <a href=\"https://itunes.apple.com/profile/alaydeliwala\" style={linkStyle}>\n                        <i class=\"fa fa-apple fa-2x\" style={buttonStyle} aria-hidden=\"true\"></i>\n                    </a>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Footer;\n\n\n","import React, { Component } from 'react';\nimport './css/skeleton.css';\nimport './css/normalize.css';\nimport Footer from './pages/Footer.js'\n\n// GitHub Universe Colors\nconst colorU = \"#F79432\";\nconst colorN = \"#F37055\";\nconst colorI = \"#EF4D7B\";\nconst colorV = \"#A166AB\";\nconst colorE1 = \"#4F73B8\";\nconst colorR = \"#1D99AE\";\nconst colorS = \"#0CB49B\";\nconst colorE2 = \"#6CBC82\";\nconst colorBack = \"#22292C\";\nconst colorWhite = \"#EBF0F4\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div class=\"container\">\n\n                {/* Title Section */}\n                <div class=\"row\">\n                    <div class=\"column\" style={{ marginTop: \"25px\" }}>\n                        <h2> Alay Deliwala.</h2>\n                    </div>\n                </div>\n\n                {/* About Me Section */}\n                <div class=\"row\" >\n                    A rising senior pursing a B.S. in Computer Science at North Carolina State University.\n                    I am a board game enthusiast with a knack for graphic design and a passion for Computer\n                    Science. I love talking about music, watching tv shows and munching on candy. Feel free\n                    to reach out!\n                </div >\n\n                {/* Projects Section */}\n                <div class=\"row\" style={{ marginTop: \"3%\" }}>\n                    <div class=\"three columns\">\n                        <p style={{ textAlign: \"left\" }}>\n                            <h4> Projects </h4>\n                        </p>\n                    </div>\n                    <div class=\"nine columns\">\n                        <p>\n                            To Do\n                        </p>\n                    </div>\n                </div>\n\n                {/* Experience Section */}\n                <div class=\"row\" style={{ marginTop: \"3%\" }}>\n                    <div class=\"three columns\">\n                        <p >\n                            <h4> Experience </h4>\n                        </p>\n                    </div>\n                    <div class=\"nine columns\">\n                        <p style={{ textAlign: \"left\" }}>\n                            To Do\n                        </p>\n                    </div>\n                </div>\n\n                {/* Contact Me Section */}\n                <div class=\"row\" style={{ marginTop: \"3%\" }}>\n                    <div class=\"three columns\">\n                        <p>\n                            <h4>Contact Me</h4>\n                        </p>\n                    </div>\n                    <div class=\"nine columns\">\n                        <p style={{ textAlign: \"left\" }}>\n                            To Do\n                        </p>\n                    </div>\n                </div>\n\n                {/* Footer Section */}\n                <div class=\"row\" style={{ marginTop: \"3%\", textAlign: \"center\" }}>\n                    <Footer />\n                </div>\n\n            </div >\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}